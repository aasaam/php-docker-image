worker_processes ${CONFIGURE_NGINX_WORKER_PROCESSES};

worker_rlimit_nofile ${CONFIGURE_NGINX_WORKER_RLIMIT_NOFILE};

error_log ${CONFIGURE_NGINX_ERROR_LOG} ${CONFIGURE_NGINX_ERROR_LOG_LEVEL};

events {
  worker_connections ${CONFIGURE_NGINX_WORKER_CONNECTIONS};
  use epoll;
  multi_accept on;
}

http {

  default_type application/octet-stream;
  include /etc/nginx/mime.types;

  client_body_timeout ${CONFIGURE_NGINX_CLIENT_BODY_TIMEOUT};
  client_max_body_size ${CONFIGURE_NGINX_CLIENT_MAX_BODY_SIZE};
  directio ${CONFIGURE_NGINX_DIRECTIO};
  keepalive_requests ${CONFIGURE_NGINX_KEEPALIVE_REQUESTS};
  keepalive_timeout ${CONFIGURE_NGINX_KEEPALIVE_TIMEOUT};
  reset_timedout_connection on;
  sendfile_max_chunk ${CONFIGURE_NGINX_SENDFILE_MAX_CHUNK};
  sendfile on;
  send_timeout ${CONFIGURE_NGINX_SEND_TIMEOUT};
  server_tokens off;
  tcp_nodelay on;
  tcp_nopush on;
  map_hash_bucket_size ${CONFIGURE_NGINX_MAP_HASH_BUCKET_SIZE};

  access_log ${CONFIGURE_NGINX_ACCESS_LOG};

  charset utf-8;
  charset_types
    application/atom+xml
    application/dash+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.apple.mpegurl
    application/x-javascript
    application/xml
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

  gzip on;
  gzip_static on;
  gzip_min_length 32;
  gzip_comp_level 9;
  gzip_vary on;
  gzip_proxied any;
  gzip_types
    audio/mpegurl
    video/mpegurl
    application/atom+xml
    application/dash+xml
    application/dicom
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.apple.mpegurl
    application/vnd.ms-fontobject
    application/x-javascript
    application/xml
    font/opentype
    font/truetype
    font/ttf
    image/svg+xml
    image/x-icon
    text/css
    text/javascript
    text/plain
    text/x-component
    text/xml;

  server {
    listen 80 default_server;
    index index.php;
    root /app/public;

    server_name _;

    location / {
      try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
      fastcgi_pass ${CONFIGURE_NGINX_PHP_CONTAINER_NAME}:9000;
      fastcgi_split_path_info ^(.+\.php)(/.*)$;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
      fastcgi_param DOCUMENT_ROOT $realpath_root;
      fastcgi_buffer_size ${CONFIGURE_NGINX_FASTCGI_BUFFER_SIZE};
      fastcgi_buffers ${CONFIGURE_NGINX_FASTCGI_BUFFERS_NUMBER} ${CONFIGURE_NGINX_FASTCGI_BUFFERS_SIZE};
      fastcgi_busy_buffers_size ${CONFIGURE_NGINX_FASTCGI_BUSY_BUFFERS_SIZE};
      internal;
    }

    location ~ \.php$ {
      return 404;
    }
  }
}
